package com.meeran.gs.learning;

public class SnailProblem2D {
	static int counter=0;
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[][] array
        = {{1, 2, 3},
        {4, 5, 6},
        {7, 8, 9}};
		System.out.println("Traverse-->"+traverseSnail(array));
		
		int[][] array1
        = {{1, 2, 3,1},
        {4, 5, 6,4},
        {7, 8, 9,7},
        {7,8,9,7}};
		
		System.out.println("Traverse-->"+traverseSnail(array1));
		
		int[][] array2
        = {{1, 2},
        {7, 8}};
		System.out.println("Traverse-->"+traverseSnail(array2));
	}

	private static String traverseSnail(int[][] array) {
		// TODO Auto-generated method stub
		
		// print first row
		for(int i=0; i<array[0].length;i++) {
			System.out.print(array[0][i]+", ");
		}
		
		//print last column (except first row last column value)
		for(int j=1; j<array.length; j++) {
			System.out.print(array[j][array[0].length-1]+", ");
		}
		
		//print last row (except last row, column index value)
		for(int k=array[0].length-2;k>=0;k--) {
			System.out.print(array[array.length-1][k]+", ");
		}
		int count=0;
		//print first low first coln and check the count
		for(int z=array.length-2;z>0; z--) {
			System.out.print(array[z][0]+", ");
			count++;
		}
		
		if(count==1) {
			System.out.print(array[1][1]);
		}else if(count>1) {
			int[][] newArray= new int[count][count];
			counter++;
			for(int m=0;m<=count;m++) {
				for(int n=0; n<=count; n++) {
					newArray[m][n] = array[m+counter][n+counter];
				}
			}
			traverseSnail(newArray);
		}
		
		return null;
	}

}
